CREATE VIEW TAG_ID AS
SELECT T1.TAG_SUBJECT_ID AS user_1, T2.TAG_SUBJECT_ID AS user_2, T1.TAG_PHOTO_ID
FROM jiaqni.PUBLIC_Tags T1, jiaqni.PUBLIC_Tags T2
WHERE T1.TAG_PHOTO_ID = T2.TAG_PHOTO_ID AND T1.TAG_SUBJECT_ID < T2.TAG_SUBJECT_ID;


CREATE VIEW POT_FRI AS
SELECT *
FROM
(SELECT U1.USER_ID AS user_1, U2.User_ID AS user_2, COUNT(*) AS CT
FROM jiaqni.PUBLIC_Users U1, jiaqni.PUBLIC_Users U2, TAG_ID T
WHERE U1.GENDER IS NOT NULL AND U2.GENDER IS NOT NULL AND U1.YEAR_OF_BIRTH IS NOT NULL AND U2.YEAR_OF_BIRTH IS NOT NULL AND 
      U1.GENDER = U2.GENDER AND ABS(U1.YEAR_OF_BIRTH - U2.YEAR_OF_BIRTH) <= 2 AND
      T.user_1 = U1.USER_ID AND T.user_2 = U2.USER_ID AND
      NOT EXISTS (SELECT *
      	          FROM jiaqni.PUBLIC_Friends F
      	          WHERE U1.USER_ID = F.USER1_ID AND U2.USER_ID = F.USER2_ID)
GROUP BY U1.USER_ID, U2.USER_ID
ORDER BY COUNT(*) DESC, U1.USER_ID ASC, U2.USER_ID ASC)
WHERE ROWNUM <= 5;



SELECT PF.user_1, U1.FIRST_NAME, U1.LAST_NAME, PF.user_2, U2.FIRST_NAME, U2.LAST_NAME, P.PHOTO_ID, P.PHOTO_LINK, A.ALBUM_ID, A.ALBUM_NAME
FROM POT_FRI PF
LEFT JOIN TAG_ID T ON PF.user_1 = T.user_1 AND PF.user_2 = T.user_2
LEFT JOIN jiaqni.PUBLIC_Users U1 on PF.user_1 = U1.USER_ID
LEFT JOIN jiaqni.PUBLIC_Users U2 on PF.user_2 = U2.USER_ID
LEFT JOIN jiaqni.PUBLIC_Photos P ON P.PHOTO_ID = T.TAG_PHOTO_ID
LEFT JOIN jiaqni.PUBLIC_Albums A ON P.ALBUM_ID = A.ALBUM_ID
ORDER BY PF.CT DESC, PF.user_1 ASC, PF.user_2 ASC, P.PHOTO_ID ASC;

DROP VIEW TAG_ID;
DROP VIEW POT_FRI;


-- SELECT P.PHOTO_ID, P.ALBUM_ID, P.PHOTO_LINK, A.ALBUM_NAME
-- FROM PHOTOS P, ALBUM A, TAGS T1, TAGS T2
-- WHERE T1.TAG_PHOTO_ID = T2.TAG_PHOTO_ID AND T1.TAG_SUBJECT_ID = *** AND T2.TAG_SUBJECT_ID = ***
--       AND P.PHOTO_ID = T1.TAG_PHOTO_ID, A.ALBUM_ID = P.ALBUM_ID
-- ORDER BY P.PHOTO_ID DESC;

-- *** is the content that get from the java code
-- *** in the first query is the diffyear
-- *** in the second query in two user ID, we can loop in the java code
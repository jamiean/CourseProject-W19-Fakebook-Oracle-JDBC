CREATE VIEW FR_ALL AS
SELECT USER1_ID, USER2_ID
FROM jiaqni.PUBLIC_Friends F
UNION
SELECT USER2_ID AS USER1_ID, USER1_ID AS USER2_ID
FROM jiaqni.PUBLIC_Friends F;


CREATE VIEW MU_ALL AS
SELECT F1.USER1_ID AS ID1, F2.USER2_ID AS ID2, F1.USER2_ID AS MID
FROM FR_ALL F1, FR_ALL F2
WHERE F1.USER2_ID = F2.USER1_ID AND F1.USER1_ID < F2.USER2_ID;

-- CREATE VIEW FR_ALL AS
-- SELECT ID1 AS A, ID2 AS B
-- FROM MU_ALL
-- MINUS
-- SELECT USER1_ID AS A, USER2_ID AS B
-- FROM jiaqni.PUBLIC_Friends;

CREATE VIEW SELECTION AS
SELECT *
FROM
(SELECT M.ID1, M.ID2, COUNT(*) AS CT
FROM MU_ALL M
WHERE NOT EXISTS (SELECT * FROM
				  jiaqni.PUBLIC_Friends F
				  WHERE M.ID1 = F.USER1_ID AND M.ID2 = F.USER2_ID)
GROUP BY M.ID1, M.ID2
ORDER BY COUNT(*) DESC, M.ID1 ASC, M.ID2 ASC)
WHERE ROWNUM <= 5;

SELECT S.ID1, U1.FIRST_NAME, U1.LAST_NAME, S.ID2, U2.FIRST_NAME, U2.LAST_NAME, 
       M.MID, U3.FIRST_NAME, U3.LAST_NAME, S.CT
FROM SELECTION S, MU_ALL M, jiaqni.PUBLIC_Users U1, jiaqni.PUBLIC_Users U2, jiaqni.PUBLIC_Users U3
WHERE S.ID1 = M.ID1 AND S.ID2 = M.ID2 AND 
      U1.USER_ID = S.ID1 AND U2.USER_ID = S.ID2 AND U3.USER_ID = M.MID
ORDER BY S.CT DESC, S.ID1 ASC, S.ID2 ASC, M.MID ASC;

DROP VIEW MU_ALL;
DROP VIEW FR_ALL;
DROP VIEW SELECTION;



-- CREATE VIEW MU_ALL AS
-- SELECT LEAST(F1.USER2_ID, F2.USER2_ID) AS ID1, GREATEST(F1.USER2_ID, F2.USER2_ID) AS ID2
-- FROM jiaqni.PUBLIC_Friends F1, jiaqni.PUBLIC_Friends F2
-- WHERE (F1.USER1_ID = F2.USER1_ID AND F1.USER2_ID <> F2.USER2_ID) OR
--       (F1.USER2_ID = F2.USER1_ID) OR (F1.USER2_ID = F2.USER2_ID AND F1.USER1_ID <> F2.USER1_ID);

